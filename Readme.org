* undo-propose

This package aims to make Emacs' confusing undo system easier to navigate.
It works by allowing you to navigate through the undo history in a temporary
buffer.  If at any point you get lost, you can easily cancel the proposed
chain of undo's.  When you are finished, the sequence of undo commands is added
as a single edit in the undo history, making it easier to traverse through
the chain of undo's and redo's later on.

To use undo-propose, call "M-x undo-propose" in the buffer you are editing.
This will send you to a new temporary buffer, which is read-only except
for allowing `undo' commands.  Cycle through the list of undo's as normal.
When you are finished, type "C-c C-c" to add the chain of undo's as a
single edit to the undo history.  To cancel, type "C-c C-k".  You can also
ediff the proposed chain of undo's by typing "C-c C-d".

** Screenshot

In the following gif, I enter some text, call ~undo-propose~, do a sequence of undo's and redo's within the ~undo-propose~ buffer, compare against the original buffer with ~ediff~, commit the sequence of undo's, and finally undo (redo) the change made by ~undo-propose~.

[[./assets/undo-ediff-commit-undo-redo.gif]]

** Other notes

See [[https://www.emacswiki.org/emacs/UndoTree][undo-tree.el]] for a more powerful undo navigation system. Unfortunately,
undo-tree frequently corrupts the undo history, leading to lost work
(for example, see [[https://github.com/emacs-evil/evil/issues/1074]]).
It has a large and complex code-base, making it difficult to understand or modify.

undo-propose avoids writing a new undo system, only lightly wrapping
emacs' default undo. I hope this design will avoid the corruption issues
that plague previous [[http://ergoemacs.org/emacs/emacs_best_redo_mode.html][attempts]], while still improving the useability of emacs' undo.
